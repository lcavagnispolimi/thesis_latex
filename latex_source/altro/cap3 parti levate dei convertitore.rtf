{\rtf1\ansi\ansicpg1252\cocoartf1347\cocoasubrtf570
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs24 \cf0 parti levate cap 3:\
\
Intro cap:\
\
soffermandoci prima sulle architetture dei convertitori presenti in letteratura e poi su quelle presenti nello strumento\
\
I convertitori presenti sulla \\textit\{SCO Board\} e le loro caratteristiche fondamentali verranno descritte in dettaglio nei paragrafi successivi.\
\
\
\
Nei paragrafi successivi verr\'e0 trattato lo stato dell'arte dei convertitori dati e verranno descritte le architetture dei convertitori presenti sulla scheda di conversione utilizzata.\
\
\
\\paragraph\{Architetture DAC\}\
Esistono due architetture comuni di DAC:\
\\begin\{enumerate\}\
	\\item A resistori pesati (o \\textit\{Binary-weighted resistor\})\
	\\item A scala R-2R (o \\textit\{R-2R resistor chain\})\
\\end\{enumerate\}\
\\begin\{figure\}  \
  \\begin\{center\}\
    \\includegraphics[scale=0.4]\{cap3/bwdac\}\
    \\caption\{Struttura circuitale di un DAC a resistori pesati\}\
    \\label\{bwdac\}\
  \\end\{center\}\
\\end\{figure\}\
\\subparagraph\{\\textbf\{DAC a resistori pesati\}\} La Figura \\ref\{bwdac\} illustra lo schema circuitale di un generico DAC a resistori pesati a n bit.\
Il circuito, mostrato in figura, \'e8 costituito da $n$ interruttori pilotati dagli $n$ bit della parola in ingresso, $n$ resistori pesati su un valore di riferimento $R$, e un convertitore corrente-tensione invertente.\
\
Ogni ingresso controlla un interruttore (\\textit\{switch\}) che collega un resistore a un riferimento di tensione. Quando il generico bit dell'ingresso \'e8 a $1$ il corrispondente interruttore viene collegato al riferimento di tensione $-V_\{ref\}$, mentre quando il bit \'e8 a $0$ l'interruttore viene collegato a massa ($0 V$).\
\
Data la corrente passante nell' $i$-esimo interruttore controllato dal bit $b_i$ della parola:\
\\begin\{equation\}\
	I_i=-\\frac\{V_\{ref\}\}\{2^\{(n-1)-i\}R\}b_i = -\\frac\{V_\{ref\}\}\{2^\{(n-1)\}R\}2^ib_i\
\\end\{equation\}\
si ricava la corrente complessiva della rete di resistori pesati:\
\\begin\{equation\}\
	I = \\sum_\{k=1\}^\{n-1\} I_k = -\\frac\{V_\{ref\}\}\{2^\{(n-1)\}R\} \\sum_\{k=1\}^\{n-1\} 2^k b_k \
\\end\{equation\}\
Infine, per effetto del convertitore corrente-tensione si ha:\
\\begin\{equation\}\
	V_0 = -R_f I\
\\end\{equation\}\
dove $R_f$ \'e8 il resistore di feedback. L'equazione definisce la relazione ingresso-uscita del DAC.\
\
I vantaggi di questa configurazione sono la semplicit\'e0 di realizzazione del circuito e l'utilizzo di un ristretto numero di resistenze ($n$ bit, $n$ resistenze). Per tale motivo le risoluzioni tipiche per questo metodo sono inferiori ai $10$ bit.\
\
Lo svantaggio maggiore \'e8 la difficolt\'e0 nel realizzare resistenze con valori differenti e perfettamente calibrati, in modo tale che i loro rapporti tra esse siano precisi.\
Per tale motivo questa configurazione \'e8 tuttavia poco usata nella pratica.\
\
\\subparagraph\{\\textbf\{DAC a scala R-2R\}\}\
Il DAC a resistenze pesate visto nella paragrafo precedente presenta problemi di realizzazione e di funzionamento, dovuti sostanzialmente all'uso di resistori molto differenti fra di loro. Questi problemi possono essere risolti usando un'altra architettura circuitale: il DAC a scala R-2R.\
\
La figura \\ref\{r2rdac\} illustra lo schema circuitale di un generico DAC a scala R-2R a $n$ bit.\
Il circuito, mostrato in figura, \'e8 costituito da $n$ interruttori pilotati dagli $n$ bit della parola in ingresso, $n$ resistori e un convertitore corrente-tensione invertente. \
\
La differenza in questo caso \'e8 che tutti i resistori collegati agli interruttori hanno lo stesso valore $2R$. Inoltre, l'estremit\'e0 di ogni resistore \'e8 collegata ad una catena di resistenze che va dall'ingresso invertente del convertitore corrente-tensione a massa.\
\\begin\{figure\}  \
  \\begin\{center\}\
    \\includegraphics[scale=0.4]\{cap3/r2rdac\}\
    \\caption\{Struttura circuitale di un DAC a scala R-2R\}\
    \\label\{r2rdac\}\
  \\end\{center\}\
\\end\{figure\}\
\
Il circuito \'e8 realizzato in modo tale che le correnti che fluiscono attraverso i resistori collegati agli interruttori vedano una resistenza $2R$ guardando in entrambe le direzioni lungo la catena delle resistenze. Pertanto, met\'e0 della corrente andr\'e0 in ciascuna direzione. \
\
Allo stesso modo, le correnti che scorrono lungo la catena vedono resistenze uguali in entrambe le direzioni e ad ogni nodo vengono nuovamente divise.\
\
Riassumendo, ciascun interruttore contribuisce con met\'e0 della corrente fornita dall'interruttore sopra, e tale corrente viene ripetutamente dimezzata da ogni nodo incontrato nel percorso verso l'amplificatore operazionale.\
\
Pertanto, le correnti generate dagli interruttori sono pesate, come nel metodo precedente, ma senza l'uso di un ampio intervallo di valori di resistenza. Dunque questa architettura presenta il vantaggio di utilizzare solo due valori resistivi risultando pi\'f9 facile da realizzare.\
\
I tempi di conversione dei metodi precedentemente descritti sono simili. Essi sono determinati dal tempo impiegato dagli interruttori per cambiare stato e dal tempo di risposta dell'amplificatore operazionale. In generale il tempo di conversione cresce all'aumentare della risoluzione. Un DAC a $8$ bit per applicazioni generiche (\\textit\{general-purpose\}) possiede tempi di conversione compresi tra i $100ns$ e $1ms$, mentre un convertitore a $16$ bit pu\'f2 avere un tempo di conversione nell'ordine dei microsecondi.\
\
Per applicazioni specifiche, come nel caso del misuratore oggetto di questo lavoro di tesi, sono necessari convertitori ad alta velocit\'e0 con tempi di conversione nell'ordine dei nanosecondi. Per raggiungere tali prestazioni l'uso di una singola architettura non basta, pertanto \'e8 necessario combinare due o pi\'f9 architetture allo scopo di raggiungere le prestazioni richieste. Il procedimento \'e8 noto come "segmentazione" e questa  architettura \'e8 chiamata "DAC segmentato\'94 (\\textit\{Segmented DAC\}). \
\
\
\
Questo convertitore utilizza la tecnica della somma di correnti vista nelle precedenti due architetture, ma al contrario di quest'ultime i generatori di corrente sono implementati con transistor PMOS invece che con resistori e tensioni di riferimento.\
\\begin\{figure\}  \
  \\begin\{center\}\
    \\includegraphics[scale=0.3]\{cap3/schemadac902\}\
    \\caption\{Schema a Blocchi interno del DAC - DAC902\}\
    \\label\{schemadac902\}\
  \\end\{center\}\
\\end\{figure\}\
L'architettura segmentata utilizzata in questo integrato sfrutta due architetture: un DAC gestisce i bit pi\'f9 significativi (MSB) e un altro gestisce i bit meno significativi (LSB). Lo schema a blocchi \'e8 mostrato in figura \\ref\{schemadac902\}.\
\
\
\\paragraph\{Architetture ADC\}\
Esistono cinque architetture comuni di ADC:\
\\begin\{enumerate\}\
	\\item A conteggio (\\textit\{Counter\})\
	\\item Ad approssimazioni successive (\\textit\{Successive Approximation\})\
	\\item A Doppia rampa (\\textit\{Dual Slope\})\
	\\item Flash\
	\\item Pipeline\
\\end\{enumerate\}\
\
\\subparagraph\{\\textbf\{ADC a conteggio\}\}\
\\begin\{figure\}  \
  \\begin\{center\}\
    \\includegraphics[scale=0.35]\{cap3/adccounter\}\
    \\caption\{Schema di funzionamento di un ADC a conteggio\}\
    \\label\{adccounter\}\
  \\end\{center\}\
\\end\{figure\}\
L'ADC a conteggio \'e8 una delle forme pi\'f9 semplici di convertitore ADC. Lo schema di funzionamento \'e8 mostrato in Figura \\ref\{adccounter\}.\
\
Il cuore dell'architettura \'e8 costituito da un contatore incrementale. La conversione viene effettuata iniziando un nuovo conteggio a partire da zero. L'uscita del contatore viene convertita in analogico dal DAC e quindi confrontata con la tensione di ingresso mediante un comparatore. Un comparatore \'e8 un dispositivo che produce un'uscita booleana a seconda di quale dei due ingressi \'e8 maggiore. Quando il valore prodotto dal DAC supera la tensione di ingresso, il conteggio viene bloccato e tale valore rappresenta il valore di tensione di uscita.\
\
Questo metodo \'e8 di semplice realizzazione, ma i principali difetti sono la lentezza e il tempo di conversione non costante. Per un ADC a $n$ bit, la conversione pu\'f2 richiedere nel caso pessimo $2^\{n-1\}$ cicli di clock. Il tempo di conversione \'e8 solitamente nell'ordine dei millisecondi (ca. $500 Sa/s$).\
\
Una versione migliorata dell'ADC a conteggio \'e8 l'ADC a inseguimento (\\textit\{servo ADC\}): il contatore incrementale viene sostituito con un contatore incrementale/decrementale. Pertanto, l'uscita del comparatore \'e8 utilizzata come segnale di comando del contatore, forzando il contatore a "inseguire" segnale di ingresso analogico. Esso risulta pi\'f9 veloce dell'ADC a conteggio, a condizione che i valori di tensione da convertire siano abbastanza vicini fra loro.\
\
\\subparagraph\{\\textbf\{ADC ad approssimazioni successive\}\}\
\\begin\{figure\}  \
  \\begin\{center\}\
    \\includegraphics[scale=0.35]\{cap3/adcsar\}\
    \\caption\{Schema di funzionamento di un ADC ad approssimazioni successive\}\
    \\label\{adcsar\}\
  \\end\{center\}\
\\end\{figure\}\
L'ADC ad approssimazioni successive \'e8 basato su una logica di controllo costituita da un registro ad approssimazioni successive chiamato SAR (\\textit\{Successive Approximation Register\}). Lo schema di funzionamento \'e8 mostrato in Figura \\ref\{adcsar\}.\
\
Questa architettura \'e8 simile a quella dell'ADC a conteggio, fatta eccezione che il semplice contatore incrementale \'e8 sostituito dalla logica di controllo SAR. Come negli ADC a conteggio, la conversione avviene confrontando l'uscita di un convertitore DAC con la tensione in ingresso.\
\
Il DAC viene comandato dalla parola digitale prodotta dalla logica di controllo. Inizialmente, tutti i bit della parola digitale sono impostati a 0 mentre il bit pi\'f9 significativo (MSB, \\textit\{Most Significant Bit\}) \'e8 impostato a $1$. Questo valore viene convertito e confrontato con il segnale di ingresso analogico utilizzando il comparatore ed il risultato del comparatore viene inviato al SAR. Se la tensione di ingresso \'e8 maggiore della parola digitale corrente, il SAR mantiene l'MSB a 1 e carica un altro 1 nel bit immediatamente successivo, altrimenti pone l'MSB a 0 e carica sempre un 1 nel bit immediatamente successivo. I passi appena descritti vengono reiterati fino al bit meno significativo (LSB, \\textit\{Least Significant Bit\}). Il metodo appena descritto \'e8 chiamato metodo di \\textit\{bisezione\}.\
\
Il tempo di conversione dell'ADC \'e8 costante qualunque sia il valore della tensione in ingresso. Indicando con $T_\{ck\}$ il periodo del clock e con $n$ bit il numero di bit del convertitore, il tempo di conversione $T_\{conv\}$ \'e8 pari a:\
\\begin\{equation\}\
	T_\{conv\}=nT_\{ck\}\
\\end\{equation\}\
\
Questa architettura raggiunge velocit\'e0 di conversione migliori dell'ADC a conteggio, perdendo per\'f2 in semplicit\'e0 di realizzazione.\
\
Solitamente i convertitori SAR possiedono risoluzioni comprese tra gli $8$ e i $12$ bit con tempi di conversione nell'ordine dei microsecondi ($50 \\div 400 KSa/s$).\
\
\\subparagraph\{\\textbf\{ADC a Doppia rampa\}\}\
\\begin\{figure\}  \
  \\begin\{center\}\
    \\includegraphics[scale=0.35]\{cap3/adcdoppiarampa\}\
    \\caption\{Schema di funzionamento di un ADC a doppia rampa\}\
    \\label\{adcdoppiarampa\}\
  \\end\{center\}\
\\end\{figure\}\
L'ADC a doppia rampa \'e8 un convertitore basato sull'utilizzo di un integratore. Lo schema di funzionamento \'e8 mostrato in Figura \\ref\{adcdoppiarampa\}.\
\
L'amplificatore operazionale integra il segnale di ingresso per un determinato periodo di tempo, producendo una carica sul condensatore proporzionale alla tensione di ingresso. L'integratore viene poi collegato ad un riferimento di tensione negativo che permette di scaricare il condensatore ad una velocit\'e0 costante.\
\
Il tempo impiegato per scaricare il condensatore viene misurato da un contatore. Il tempo di scarica \'e8 proporzionale alla quantit\'e0 di carica presente nel condensatore e quindi alla tensione di ingresso. Tale conteggio corrisponde al valore digitale prodotto in uscita.\
\
Questa tecnica si utilizza in quelle applicazioni in cui il segnale da convertire varia lentamente nel tempo, privilegiando la precisione rispetto alla rapidit\'e0 di conversione. Con questi convertitori \'e8 possibile raggiungere risoluzioni maggiori di $20$ bit portando per\'f2 il tempo di conversione sull'ordine dei secondi ($10 \\div 100 Sa/s$).\
\
\\subparagraph\{\\textbf\{ADC Flash\}\}\
\\begin\{figure\}  \
  \\begin\{center\}\
    \\includegraphics[scale=0.35]\{cap3/adcflash\}\
    \\caption\{Schema di funzionamento di un ADC Flash\}\
    \\label\{adcflash\}\
  \\end\{center\}\
\\end\{figure\}\
L'ADC Flash \'e8 basato sull'utilizzo di compratori in parallelo. Lo schema di funzionamento \'e8 mostrato in Figura \\ref\{adcflash\}.\
\
Il segnale di ingresso di un ADC Flash a $n$ bit, viene confrontato con $2^n$ tensioni di riferimento, tipicamente generate con una stringa resistiva realizzata con $2^n$ resistori, tramite $2^n$ comparatori. Il risultato \'e8 che tutti i comparatori che hanno tensioni superiori alla tensione di ingresso produrranno un uscita di tensione positiva, mentre quelli collegati a tensioni al di sotto della tensione di ingresso produrranno tensioni di senso opposto. La logica combinatoria viene quindi utilizzata per determinare il valore digitale di uscita.\
\
Il grosso vantaggio di questa tecnica \'e8 la velocit\'e0 di conversione, essa permette di raggiungere tempi di conversione nell'ordine dei nanosecondi (fino a $40 GSa/s$): \'e8 la tecnica ADC pi\'f9 veloce. \
\
Lo svantaggio \'e8 l'alto costo di realizzazione ($n$ bit implica $2^n$ comparatori). Pertanto, le risoluzioni tipiche sono di $8$ bit.\
\
\\subparagraph\{\\textbf\{ADC Pipeline\}\}\
\\begin\{figure\}  \
  \\begin\{center\}\
    \\includegraphics[scale=0.3]\{cap3/adcpipeline\}\
    \\caption\{Schema di funzionamento di un ADC Pipeline \}\
    \\label\{adcpipeline\}\
  \\end\{center\}\
\\end\{figure\}\
L'ADC Pipeline \'e8 un convertitore che sfrutta il principio della pipeline. Lo schema di funzionamento \'e8 mostrato in Figura \\ref\{adcpipeline\}.\
\
Una pipeline \'e8 un insieme di stadi di elaborazione connessi in serie, in cui l'uscita di un elemento \'e8 l'ingresso del successivo. Gli stadi sono identici, quindi \'e8 sufficiente spiegare il funzionamento del primo per comprendere il funzionamento di tutta l'architettura.\
\
Il segnale analogico d'ingresso viene convertito da un ADC SAR a $n$ bit. Il segnale digitale cos\'ec prodotto costituisce l'uscita dello stadio. Il segnale ottenuto dal SAR, oltre che essere l'uscita dello stadio, costituisce l'ingresso di un DAC, che fornisce in uscita nuovamente un segnale analogico, che per\'f2 differisce da quello originale in quanto affetto da errore di quantizzazione introdotto dal SAR.\
\
Il campione cos\'ec ottenuto va in ingresso a un sommatore che ne fa la differenza col segnale analogico originale, ottenendo cos\'ec come risultato l'errore di quantizzazione. Successivamente l'errore di quantizzazione va in ingresso a un amplificatore di guadagno $2^n$, in modo da poter sfruttare al massimo l'intervallo di conversione del ADC SAR. Infine, gli stadi successivi al primo convertono l'errore di quantizzazione. I bit ottenuti in uscita dai diversi stadi vengono poi riallineati tramite opportuni registri, in modo da costituire la parola digitale di uscita. \
\
La risoluzione di un convertitore Pipeline risulta limitata dalla precisione dei convertitori AD e DA presenti nell'architettura. La massima risoluzione ottenibile si aggira da un minimo di $8$ bit a un massimo di $24$ bit  con velocit\'e0 di conversione sull'ordine dei nanosecondi ($1 \\div 200 MSa/s$). \
\
\
\\begin\{figure\}  \
  \\begin\{center\}\
    \\includegraphics[scale=0.5]\{cap3/ads807schema\}\
    \\caption\{Schema di funzionamento del ADS807\}\
    \\label\{ads807schema\}\
  \\end\{center\}\
\\end\{figure\}\
\
La figura \\ref\{ads807schema\} mostra lo schema a blocchi interno del \\textit\{ADS807\}.\
Il circuito \'e8 costituito da quattro componenti principali:\
\\begin\{itemize\}\
	\\item \\underline\{Circuito di Track \\& Hold\}: L'ingresso analogico consiste in un circuito differenziale di \\textit\{Track \\& Hold\}. Tale circuito \'e8 utilizzato per mantenere il segnale campionato costante durante tutto il periodo di conversione. A differenza di un \\textit\{Sample \\& Hold\}, il \\textit\{Track \\& Hold\} trascorre la maggior parte del tempo seguendo l'ingresso ed \'e8 posto in modo hold solo per un breve intervallo. Nei sistemi di acquisizione che operano ad elevate velocit\'e0, come in questo caso (superiori a $1MHz$), i termini \\textit\{Sample \\& Hold\} e \\textit\{Track \\& Hold\} perdono la loro distinzione.\
	\\item \\underline\{ADC Pipeline\}: L'architettura a Pipeline \'e8 formata da $12$ stadi interni con una latenza di $6$ cicli di clock. I dati in uscita diventano validi sul fronte di salita del clock.\
	\\item \\underline\{Logica per la correzione dell'errore (Error Correction Logic)\}: La logica di correzione dell'errore \'e8 quella descritta nel paragrafo precedente dove il campione digitale prodotto ogni stadio della pipeline viene convertito da un DAC e sottratto al valore analogico di ingresso producendo cos\'ec un errore di quantizzazione che verr\'e0 amplificato e inviato allo stadio successivo.\
	\\item \\underline\{3 State Outputs\}: L'uscita digitale del convertitore possiede una logica a $3$ stati. Nella logica \\textit\{tri-state\} \'e8 presente un terzo stato, detto ad alta impedenza, oltre ai due livelli logici gi\'e0 presenti nella logica binaria. Nello stato ad alta impedenza l'uscita si comporta come se fosse elettricamente disconnessa dal resto del circuito.\
\\end\{itemize\}\
}